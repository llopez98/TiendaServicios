@page "/home"
@inject HttpClient Http

<div class="container-fluid">
    <h3>Get Page</h3>

    @if (libros != null)
    {
        <SfGrid DataSource="@libros">
            <GridColumns>
                <GridColumn Field=@nameof(Libros.LibreriaMaterialId) HeaderText="Código del libro"></GridColumn>
                <GridColumn Field=@nameof(Libros.Titulo) HeaderText="Titulo"></GridColumn>
                <GridColumn Field=@nameof(Libros.FechaPublicacion) HeaderText="Fecha de Publicacion"></GridColumn>
                <GridColumn Field=@nameof(Libros.AutorLibro) HeaderText="Código del Autor"></GridColumn>
            </GridColumns>
        </SfGrid>

        <ul class="mt-1">
            @foreach (var libro in libros)
            {
                <li>@libro.Titulo</li>
            }
        </ul>
    }
    else
    {
        <p>Error al traer los datos</p>
    }

    <br />
    <EditForm Model="@librosPost" OnValidSubmit="@onSubmitInsert" class="form-control">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <label class="form-label">
            Titulo:
            <InputText @bind-Value="librosPost.Titulo" class="form-text" />
        </label>
        <br />
        <label class="form-label">
            Fecha publicacion:
            <InputText @bind-Value="librosPost.FechaPublicacion" class="form-text" />
        </label>
        <br />
        <label class="form-label">
            AutorLibro:
            <InputText @bind-Value="librosPost.AutorLibro" class="form-text" />
        </label>
        <br />

        <button type="submit" class="btn btn-info">Send</button>
    </EditForm>

    <br />

    <h6>Sección de update</h6>
    <EditForm Model="@librosPost" OnValidSubmit="@onSubmitUpdate" class="form-control">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <label class="form-label">
            Id:
            <InputText @bind-Value="librosPost.LibreriaMaterialId" class="form-text" />
        </label>
        <br />
        <label class="form-label">
            Titulo:
            <InputText @bind-Value="librosPost.Titulo" class="form-text" />
        </label>
        <br />
        <label class="form-label">
            Fecha publicacion:
            <InputText @bind-Value="librosPost.FechaPublicacion" class="form-text" />
        </label>
        <br />
        <label class="form-label">
            AutorLibro:
            <InputText @bind-Value="librosPost.AutorLibro" class="form-text" />
        </label>
        <br />

        <button type="submit" class="btn btn-info">Send</button>
    </EditForm>

    <br />

    <h6>Sección de delete</h6>
    <div class="form-control">
        <label class="form-label">
            Inserte el id del libro a eliminar:
            <input @bind="id" class="form-text" required />
        </label>
        <br />
        <button type="submit" onclick="@onSubmitDelete()" class="btn btn-info">Send</button>
    </div>
</div>

@code {
    //private Libros[]? libros;
    private List<Libros>? libros;
    private Libros librosPost = new Libros();
    private string? id;

    protected override async Task OnInitializedAsync() => libros = await Http.GetFromJsonAsync<List<Libros>>("http://localhost:5089/Libro");

    //envio de datos
    private async void onSubmitInsert()
    {
        await Http.PostAsJsonAsync("http://localhost:5089/Libro", librosPost);
    }

    //update
    private async void onSubmitUpdate()
    {
        await Http.PutAsJsonAsync("http://localhost:5089/Libro", librosPost);
    }

    //delete
    private async Task onSubmitDelete() => await Http.DeleteAsync($"http://localhost:5089/Libro/{id}");

    //clase modelo
    public class Libros
    {
        [Required]
        public string? LibreriaMaterialId { get; set; }
        [Required]
        public string? Titulo { get; set; }
        [Required]
        public string? FechaPublicacion { get; set; }
        [Required]
        public string? AutorLibro { get; set; }
    }
}
